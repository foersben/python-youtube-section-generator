name: 📦 Build & Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write          # ← allows “create a release”
  packages: read           # (keep whatever else you need)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: [3.12]

    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Write .env with Gemini key
        shell: bash
        run: echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env

      - name: Install PyInstaller
        run: poetry run pip install pyinstaller

      - name: Package with PyInstaller
        shell: bash
        run: |
          rm -rf build dist
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            sep=";"
            out="webapp-win.exe"
          else
            sep=":"
            out="webapp-linux"
          fi
          poetry run pyinstaller \
            --onefile \
            --name $out \
            --add-data "src/templates${sep}templates" \
            --add-data "static${sep}static" \
            app.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp-${{ matrix.os }}
          path: |
            dist/webapp-linux
            dist/webapp-win.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux build
        uses: actions/download-artifact@v4
        with:
          name: webapp-ubuntu-latest
          path: .

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: webapp-windows-latest
          path: .

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
              dist/webapp-linux
              dist/webapp-win.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload Linux binary
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: dist/webapp-*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Windows binary
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: dist/webapp-*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}